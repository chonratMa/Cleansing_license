module.exports = (sequelize, DataTypes) => {
    const License = sequelize.define(
        "license",
        {
            id: {
                type: DataTypes.BIGINT,
                primaryKey: true,
                autoIncrement: true,
            },
            note_id: {
                type: DataTypes.STRING(50),
                unique: true
            },
            birth_village: DataTypes.STRING(100),
            birth_district: DataTypes.STRING(25),
            birth_province: DataTypes.STRING(25),
            cat: DataTypes.STRING(15),
            changelog: DataTypes.TEXT,
            dateofbirth: DataTypes.STRING(50),
            district: DataTypes.STRING(25),
            division_no: DataTypes.STRING(15),
            editedby: DataTypes.STRING(15),
            entry_date: DataTypes.STRING(25),
            encoder: DataTypes.STRING(50),
            examdates: DataTypes.STRING(150),
            examdate_A: DataTypes.STRING(15),
            examdate_A1: DataTypes.STRING(15),
            examdate_A2: DataTypes.STRING(15),
            examdate_B: DataTypes.STRING(15),
            examdate_C: DataTypes.STRING(15),
            examdate_D: DataTypes.STRING(15),
            examdate_D1: DataTypes.STRING(15),
            examdate_E: DataTypes.STRING(15),
            examplace_A: DataTypes.STRING(25),
            examplace_A1: DataTypes.STRING(25),
            examplace_A2: DataTypes.STRING(25),
            examplace_B: DataTypes.STRING(25),
            examplace_C: DataTypes.STRING(25),
            examplace_D: DataTypes.STRING(25),
            examplace_D1: DataTypes.STRING(25),
            examplace_E: DataTypes.STRING(25),
            exam_A: DataTypes.STRING(15),
            exam_A1: DataTypes.STRING(15),
            exam_A2: DataTypes.STRING(15),
            exam_B: DataTypes.STRING(15),
            exam_C: DataTypes.STRING(15),
            exam_D: DataTypes.STRING(15),
            exam_D1: DataTypes.STRING(15),
            exam_E: DataTypes.STRING(15),
            examnumber: DataTypes.STRING(15),
            examtype: DataTypes.STRING(15),
            expire_date: DataTypes.STRING(15),
            id_t: DataTypes.STRING(30),
            in1: DataTypes.CHAR(3),
            issue_date: DataTypes.STRING(15),
            issue_place: DataTypes.STRING(40),
            license_A: DataTypes.STRING(25),
            license_A1: DataTypes.STRING(25),
            license_A2: DataTypes.STRING(25),
            license_B: DataTypes.STRING(25),
            license_C: DataTypes.STRING(25),
            license_D: DataTypes.STRING(25),
            license_D1: DataTypes.STRING(25),
            license_E: DataTypes.STRING(25),
            license_place_A: DataTypes.STRING(25),
            license_place_A1: DataTypes.STRING(25),
            license_place_A2: DataTypes.STRING(25),
            license_place_B: DataTypes.STRING(25),
            license_place_C: DataTypes.STRING(25),
            license_place_D: DataTypes.STRING(25),
            license_place_D1: DataTypes.STRING(25),
            license_place_E: DataTypes.STRING(25),
            license_no: DataTypes.STRING(15),
            log: DataTypes.TEXT,
            mistakeby: DataTypes.STRING(25),
            modify_date: DataTypes.STRING(20),
            name: DataTypes.STRING(100),
            name_inter: DataTypes.STRING(40),
            nationality_lao: DataTypes.STRING(25),
            nationality_inter: DataTypes.STRING(25),
            number: DataTypes.STRING(50),
            occupation: DataTypes.STRING(25),
            object_id: DataTypes.STRING(25),
            office: DataTypes.STRING(50),
            others: DataTypes.STRING(50),
            owner: DataTypes.STRING(25),
            parent_id: DataTypes.STRING(25),
            photofileno: DataTypes.STRING(25),
            photo: DataTypes.STRING(150),
            phone: DataTypes.STRING(25),
            print_count: DataTypes.CHAR(2),
            printlog: DataTypes.TEXT,
            province: DataTypes.STRING(25),
            province_abbr: DataTypes.STRING(15),
            province_no: DataTypes.STRING(15),
            remark: DataTypes.TEXT,
            remark1: DataTypes.TEXT,
            result_A: DataTypes.STRING(50),
            result_A1: DataTypes.STRING(50),
            result_A2: DataTypes.STRING(50),
            result_B: DataTypes.STRING(50),
            result_C: DataTypes.STRING(50),
            result_D: DataTypes.STRING(50),
            result_D1: DataTypes.STRING(50),
            result_E: DataTypes.STRING(50),
            root: DataTypes.STRING(50),
            school_A: DataTypes.STRING(50),
            school_A1: DataTypes.STRING(50),
            school_A2: DataTypes.STRING(50),
            school_B: DataTypes.STRING(50),
            school_C: DataTypes.STRING(50),
            school_D: DataTypes.STRING(50),
            school_D1: DataTypes.STRING(50),
            school_E: DataTypes.STRING(50),
            train_at: DataTypes.STRING(50),
            type: DataTypes.STRING(15),
            update_time: DataTypes.STRING(20),
            village: DataTypes.STRING(50),
            withdrawer: DataTypes.STRING(25),
            version: DataTypes.CHAR(3),
            access: DataTypes.STRING(15),
            collection: DataTypes.STRING(50),
            counted: DataTypes.CHAR(10),
            deleted: DataTypes.CHAR(5),
            policenote: DataTypes.TEXT,
            data_code: DataTypes.STRING(25),
            date_report: DataTypes.STRING(20),
            department: DataTypes.STRING(5),
            employee_number: DataTypes.STRING(50),
            eye_color: DataTypes.STRING(20),
            fine9: DataTypes.STRING(5),
            finedate: DataTypes.STRING(20),
            finelocation: DataTypes.STRING(100),
            finelog: DataTypes.TEXT,
            made_out: DataTypes.STRING(50),
            olddata: DataTypes.STRING(50),
            paper: DataTypes.STRING(5),
            province_code: DataTypes.STRING(5),
            releasedate: DataTypes.STRING(50),
            resolution: DataTypes.STRING(100),
            row: DataTypes.STRING(25),
            save: DataTypes.STRING(20),
            work_phone: DataTypes.STRING(25),
            flag: DataTypes.INTEGER,
            created_at: { type: DataTypes.DATE, defaultValue: null },
            updated_at: { type: DataTypes.DATE, defaultValue: null },
        },
        {
            timestamps: false,
            tableName: 'license',
        }
    );
    return License;
};
